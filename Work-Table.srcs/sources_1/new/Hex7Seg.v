`timescale 1ns / 1ps

// 7段数码管模块
module Hex7Seg (
    input [4:0] key,           // 输入数字或符号
    output reg [6:0] A2G       // 输出数码管阴极信号
);
    always @(*) begin
        case (key[4:0])        // 根据输入数字选择相应的数码管阴极信号
            5'h10: A2G = 7'b1001110;  // 加号对应的数码管阴极信号
            5'h11: A2G = 7'b1111110;  // 减号对应的数码管阴极信号
            5'h12: A2G = 7'b1110110;  // 等号对应的数码管阴极信号
            5'h13: A2G = 7'b1100010;  // 乘号对应的数码管阴极信号
            
            5'h00: A2G = 7'b0000001;  // 数字0对应的数码管阴极信号
            5'h01: A2G = 7'b1001111;  // 数字1对应的数码管阴极信号
            5'h02: A2G = 7'b0010010;  // 数字2对应的数码管阴极信号
            5'h03: A2G = 7'b0000110;  // 数字3对应的数码管阴极信号
            5'h04: A2G = 7'b1001100;  // 数字4对应的数码管阴极信号
            5'h05: A2G = 7'b0100100;  // 数字5对应的数码管阴极信号
            5'h06: A2G = 7'b0100000;  // 数字6对应的数码管阴极信号
            5'h07: A2G = 7'b0001111;  // 数字7对应的数码管阴极信号
            5'h08: A2G = 7'b0000000;  // 数字8对应的数码管阴极信号
            5'h09: A2G = 7'b0000100;  // 数字9对应的数码管阴极信号
            5'h0A: A2G = 7'b0001000;  // 数字A对应的数码管阴极信号
            5'h0B: A2G = 7'b1100000;  // 数字B对应的数码管阴极信号
            5'h0C: A2G = 7'b0110001;  // 数字C对应的数码管阴极信号
            5'h0D: A2G = 7'b1000010;  // 数字D对应的数码管阴极信号
            5'h0E: A2G = 7'b0110000;  // 数字E对应的数码管阴极信号
            5'h0F: A2G = 7'b0111000;  // 数字F对应的数码管阴极信号
            default: A2G = 7'b1111111;  // 如果输入数字不在0~F之间，则所有数码管都不亮
        endcase
    end
endmodule